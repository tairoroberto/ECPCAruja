apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'io.fabric'

android {

    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId "br.com.trmasolutions.pibaruja"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }


    signingConfigs {
        debug {}
        release {
            Properties localProps = new Properties()
            localProps.load(new FileInputStream(file('../local.properties')))

            storeFile file(localProps["RELEASE_STORE_FILE"])
            keyAlias localProps["RELEASE_KEY_ALIAS"]
            storePassword localProps["RELEASE_STORE_PASSWORD"]
            keyPassword localProps["RELEASE_KEY_PASSWORD"]
        }
    }

    buildTypes {
        debug {
            resValue "bool", "is_release", "false"
        }

        release {
            resValue "bool", "is_release", "true"
            minifyEnabled true
            signingConfig signingConfigs.release
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    lintOptions {
        checkReleaseBuilds false
    }
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

androidExtensions {
    experimental = true
}

crashlytics { instantAppSupport true }

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    /*###################### Android support  libs ###############################*/
    implementation "com.android.support:appcompat-v7:${rootProject.supportLibs}"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout"
    implementation "com.android.support:cardview-v7:${rootProject.supportLibs}"
    implementation "com.android.support:design:${rootProject.supportLibs}"
    implementation "com.android.support:multidex:${rootProject.multidex}"
    implementation 'com.google.android.instantapps:instantapps:1.1.0'
    implementation files('libs/YouTubeAndroidPlayerApi.jar')
    /*############################################################################*/

    /*############################## Firebase #####################################*/
    implementation "com.google.firebase:firebase-core:${rootProject.firebase}"
    implementation "com.google.firebase:firebase-messaging:${rootProject.firebase_message}"
    implementation "com.google.firebase:firebase-storage:${rootProject.firebase}"
    implementation "com.google.firebase:firebase-auth:${rootProject.firebase}"
    /*############################################################################*/

    /*############################# Crashlytics ####################################*/
    implementation("com.crashlytics.sdk.android:crashlytics:${rootProject.crashlytics}@aar") {
        transitive = true
    }

    /*############################################################################*/

    /*########################## kotlin ##########################################*/
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlin_version"
    implementation "org.jetbrains.anko:anko-coroutines:${rootProject.anko_version}"
    implementation "org.jetbrains.anko:anko-commons:${rootProject.anko_version}"
    implementation "org.jetbrains.anko:anko-appcompat-v7:${rootProject.anko_version}"
    implementation "org.jetbrains.anko:anko-sdk25:${rootProject.anko_version}"

    /*############################################################################*/

    /*########################### ReactiveX ######################################*/
    implementation "io.reactivex.rxjava2:rxandroid:${rootProject.rxandroid}"
    implementation "io.reactivex.rxjava2:rxjava:${rootProject.rxjava}"

    /*############################################################################*/

    /*############################ Retrofit ######################################*/
    implementation "com.squareup.retrofit2:adapter-rxjava2:${rootProject.retrofit}"
    implementation "com.squareup.retrofit2:retrofit:${rootProject.retrofit}"
    implementation "com.facebook.stetho:stetho:${rootProject.stetho}"
    implementation "com.facebook.stetho:stetho-okhttp3:${rootProject.stetho}"
    /*############################################################################*/

    /*############################ Gson: Json Converter ##########################*/
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.retrofit}"
    implementation "com.google.code.gson:gson:${rootProject.gson}"

    /*############################################################################*/

    /*########################### Image libs #####################################*/
    implementation "com.squareup.picasso:picasso:${rootProject.picasso}"

    /*############################################################################*/

    /*######################## Architetures Components ###########################*/

    // Room Database
    implementation "android.arch.persistence.room:runtime:${rootProject.arch}"
    implementation "android.arch.persistence.room:rxjava2:${rootProject.arch}"
    kapt "android.arch.persistence.room:compiler:${rootProject.arch}"

    // Lifecycle
    implementation "android.arch.lifecycle:runtime:${rootProject.arch_lifecycle}"
    implementation "android.arch.lifecycle:extensions:${rootProject.arch_lifecycle}"
    kapt "android.arch.lifecycle:compiler:${rootProject.arch}"

    //implementation "android.arch.navigation:navigation-fragment-ktx:${rootProject.nav_version}"

    //implementation "android.arch.navigation:navigation-ui-ktx:${rootProject.nav_version}"

    /*############################################################################*/

    /*######################## Dependency injection ###########################*/

    // Dagger Core
    implementation "com.google.dagger:dagger:$project.dagger"
    kapt "com.google.dagger:dagger-compiler:$project.dagger"

    // Dagger Android
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger"
    kapt "com.google.dagger:dagger-android-processor:$project.dagger"

    /*############################################################################*/

    /*############################### Test ibs ###################################*/
    testImplementation "junit:junit:${rootProject.junit}"
    androidTestImplementation "com.android.support.test:runner:${rootProject.runner}"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:${rootProject.kotlin_version}"

    // Mokito
    testImplementation "org.mockito:mockito-core:${rootProject.mockitoVersion}"

    // Mockserver for resquest mock
    testImplementation "com.squareup.okhttp3:mockwebserver:${rootProject.mockwebserver}"

    // Arch Test for Archtecture components test
    testImplementation("android.arch.core:core-testing:${rootProject.arch}", {
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-core-utils'
    })

    // Espresso for UI test
    androidTestImplementation("com.android.support.test.espresso:espresso-core:${rootProject.espresso}", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:${rootProject.espresso}", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    androidTestImplementation("com.android.support.test.espresso:espresso-intents:${rootProject.espresso}", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    testImplementation "com.android.support.test.espresso:espresso-idling-resource:${rootProject.espresso}"
    androidTestImplementation "com.android.support.test.uiautomator:uiautomator-v18:${rootProject.uiautomator}"

    /*############################################################################*/
}
apply plugin: 'com.google.gms.google-services'
